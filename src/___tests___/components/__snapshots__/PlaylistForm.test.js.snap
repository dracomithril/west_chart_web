// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PlaylistForm/> createPlaylistAndAddTracks 1`] = `
<div
  className="playlist-form"
>
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="success"
    disabled={false}
    id="start_sp_button"
  >
    start
  </Button>
  <FormGroup
    bsClass="form-group"
    controlId="play_list_name"
    style={
      Object {
        "margin": "1px",
      }
    }
    validationState="error"
  >
    <InputGroup
      bsClass="input-group"
      style={
        Object {
          "maxWidth": 250,
        }
      }
    >
      <FormControl
        bsClass="form-control"
        componentClass="input"
        onChange={[Function]}
        placeholder="playlist name"
        type="text"
        value=""
      />
      <FormControlFeedback
        bsClass="form-control-feedback"
        bsRole="feedback"
      />
    </InputGroup>
  </FormGroup>
  <ButtonGroup
    block={false}
    bsClass="btn-group"
    justified={false}
    vertical={false}
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={false}
      id="genName_sp_button"
      onClick={[Function]}
    >
      gen. name
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="danger"
      disabled={true}
      id="crt_pl_button"
      onClick={[Function]}
    >
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              448,
              512,
              Array [],
              "f0c7",
              "M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z",
            ],
            "iconName": "save",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
       save
    </Button>
  </ButtonGroup>
  <label
    htmlFor="play_list_is_private"
  >
    <input
      checked={false}
      id="play_list_is_private"
      onChange={[Function]}
      type="checkbox"
      value="private"
    />
    private
  </label>
</div>
`;

exports[`<PlaylistForm/> renders without crashing 1`] = `
<div
  className="playlist-form"
>
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="success"
    disabled={false}
    id="start_sp_button"
  >
    start
  </Button>
  <FormGroup
    bsClass="form-group"
    controlId="play_list_name"
    style={
      Object {
        "margin": "1px",
      }
    }
    validationState="error"
  >
    <InputGroup
      bsClass="input-group"
      style={
        Object {
          "maxWidth": 250,
        }
      }
    >
      <FormControl
        bsClass="form-control"
        componentClass="input"
        onChange={[Function]}
        placeholder="playlist name"
        type="text"
        value=""
      />
      <FormControlFeedback
        bsClass="form-control-feedback"
        bsRole="feedback"
      />
    </InputGroup>
  </FormGroup>
  <ButtonGroup
    block={false}
    bsClass="btn-group"
    justified={false}
    vertical={false}
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={false}
      id="genName_sp_button"
      onClick={[Function]}
    >
      gen. name
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="danger"
      disabled={true}
      id="crt_pl_button"
      onClick={[Function]}
    >
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              448,
              512,
              Array [],
              "f0c7",
              "M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z",
            ],
            "iconName": "save",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
       save
    </Button>
  </ButtonGroup>
  <label
    htmlFor="play_list_is_private"
  >
    <input
      checked={false}
      id="play_list_is_private"
      onChange={[Function]}
      type="checkbox"
      value="private"
    />
    private
  </label>
</div>
`;

exports[`<PlaylistForm/> start_click 1`] = `
<div
  className="playlist-form"
>
  <Button
    active={false}
    block={false}
    bsClass="btn"
    bsStyle="success"
    disabled={false}
    id="start_sp_button"
    onClick={[Function]}
  >
    start
  </Button>
  <FormGroup
    bsClass="form-group"
    controlId="play_list_name"
    style={
      Object {
        "margin": "1px",
      }
    }
    validationState="error"
  >
    <InputGroup
      bsClass="input-group"
      style={
        Object {
          "maxWidth": 250,
        }
      }
    >
      <FormControl
        bsClass="form-control"
        componentClass="input"
        onChange={[Function]}
        placeholder="playlist name"
        type="text"
        value=""
      />
      <FormControlFeedback
        bsClass="form-control-feedback"
        bsRole="feedback"
      />
    </InputGroup>
  </FormGroup>
  <ButtonGroup
    block={false}
    bsClass="btn-group"
    justified={false}
    vertical={false}
  >
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="primary"
      disabled={false}
      id="genName_sp_button"
      onClick={[Function]}
    >
      gen. name
    </Button>
    <Button
      active={false}
      block={false}
      bsClass="btn"
      bsStyle="danger"
      disabled={true}
      id="crt_pl_button"
      onClick={[Function]}
    >
      <FontAwesomeIcon$1
        border={false}
        className=""
        fixedWidth={false}
        flip={null}
        icon={
          Object {
            "icon": Array [
              448,
              512,
              Array [],
              "f0c7",
              "M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z",
            ],
            "iconName": "save",
            "prefix": "fas",
          }
        }
        listItem={false}
        mask={null}
        name=""
        pull={null}
        pulse={false}
        rotation={null}
        size={null}
        spin={false}
        symbol={false}
        transform={null}
      />
       save
    </Button>
  </ButtonGroup>
  <label
    htmlFor="play_list_is_private"
  >
    <input
      checked={false}
      id="play_list_is_private"
      onChange={[Function]}
      type="checkbox"
      value="private"
    />
    private
  </label>
</div>
`;
